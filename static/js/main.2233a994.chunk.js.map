{"version":3,"sources":["initializeScene.js","renderToCanvas.js","renderToSprite.js","MindMapNode.js","colors.js","colorsByLevel.js","updateLinkPosition.js","renderMindMap.js","App.js","index.js"],"names":["initializeScene","div","renderer","THREE","antialias","setSize","window","innerWidth","innerHeight","appendChild","domElement","scene","background","camera","position","z","loadImage","url","image","Image","Promise","resolve","onload","src","renderToCanvas","content","width","height","canvas","document","createElement","ctx","getContext","getElementById","innerHTML","renderToStaticMarkup","drawImage","i","renderToSprite","map","material","sprite","scale","set","MindMapNode","level","label","xmlns","className","cx","magenta","violet","blue","turquoise","colors","updateLinkPosition","line","start","end","vStart","x","y","vEnd","distance","distanceTo","parent","localToWorld","lookAt","all","data","nodes","node","name","then","graph","ThreeForceGraph","graphData","nodeThreeObject","linkMaterial","color","colorsByLevel","linkPositionUpdate","numDimensions","linkWidth","add","counter","animate","tickFrame","render","requestAnimationFrame","App","divRef","createRef","useEffect","renderMindMap","current","ref","rootElement","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.2233a994.chunk.js","sourcesContent":["import * as THREE from 'three';\n\nexport default function initializeScene(div) {\n  const renderer = new THREE.WebGLRenderer({ antialias: true });\n  renderer.setSize(window.innerWidth, window.innerHeight);\n  div.appendChild(renderer.domElement);\n\n  const scene = new THREE.Scene();\n  scene.background = new THREE.Color(0xffffff);\n\n  const camera = new THREE.PerspectiveCamera(\n    50,\n    window.innerWidth / window.innerHeight,\n    0.1,\n    500000\n  );\n  camera.position.z = 1.5;\n  return { scene, renderer, camera };\n}\n","import { renderToStaticMarkup } from 'react-dom/server';\n\nfunction loadImage(url) {\n  const image = new window.Image();\n  return new Promise((resolve) => {\n    image.onload = () => resolve(image);\n    image.src = url;\n  });\n}\n\nexport default async function renderToCanvas(content, { width, height }) {\n  const canvas = document.createElement('canvas');\n  canvas.width = width;\n  canvas.height = height;\n  const ctx = canvas.getContext('2d');\n  const url = `data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"${width}\" height=\"${height}\">\n      <style type=\"text/css\">\n        <![CDATA[\n          ${document.getElementById('styles').innerHTML}\n        ]]>\n      </style>\n      <foreignObject width=\"${width}\" height=\"${height}\">\n      ${renderToStaticMarkup(content)}\n      </foreignObject>\n      </svg>`;\n  const image = await loadImage(url);\n  ctx.drawImage(image, 0, 0);\n  return canvas;\n}\n","import * as THREE from 'three';\nimport renderToCanvas from './renderToCanvas';\n\nexport default async function renderToSprite(content, { width, height }) {\n  const canvas = await renderToCanvas(content, {\n    width,\n    height\n  });\n  const map = new THREE.CanvasTexture(canvas);\n  const material = new THREE.SpriteMaterial({ map });\n  const sprite = new THREE.Sprite(material);\n  sprite.scale.set(width / 6, height / 6);\n  return sprite;\n}\n","import React from 'react';\nimport cx from 'classnames';\n\nexport default function MindMapNode({ level, label }) {\n  return (\n    <div\n      xmlns=\"http://www.w3.org/1999/xhtml\"\n      className={cx(\n        'mind-map-node',\n        level === 0 && 'magenta',\n        level === 1 && 'violet',\n        level === 2 && 'blue',\n        level >= 3 && 'turquoise'\n      )}\n    >\n      <div>{label}</div>\n    </div>\n  );\n}\n","import * as THREE from 'three';\n\nexport default {\n  magenta: new THREE.Color(0xf103c8),\n  violet: new THREE.Color(0x8603f1),\n  blue: new THREE.Color(0x0064d2),\n  turquoise: new THREE.Color(0x0064d2)\n};\n","import colors from './colors';\n\nexport default [colors.magenta, colors.violet, colors.blue, colors.turquoise];\n","import * as THREE from 'three';\n\nconst z = -1;\n\n/* This is code copied from the three-forcegraph library. We need to overwrite\n * the code that sets the link objects' positions, just to set the Z coordinate;\n * otherwise the lines overlap the nodes */\nexport default function updateLinkPosition(line, { start, end }) {\n  const vStart = new THREE.Vector3(start.x, start.y || 0, z);\n  const vEnd = new THREE.Vector3(end.x, end.y || 0, z);\n  const distance = vStart.distanceTo(vEnd);\n\n  line.position.x = vStart.x;\n  line.position.y = vStart.y;\n  line.position.z = vStart.z;\n\n  line.scale.z = distance;\n\n  line.parent.localToWorld(vEnd); // lookAt requires world coords\n  line.lookAt(vEnd);\n\n  return true;\n}\n","import React from 'react';\nimport data from './data';\nimport initializeScene from './initializeScene';\nimport ThreeForceGraph from 'three-forcegraph';\nimport renderToSprite from './renderToSprite';\nimport MindMapNode from './MindMapNode';\nimport * as THREE from 'three';\nimport colorsByLevel from './colorsByLevel';\nimport updateLinkPosition from './updateLinkPosition';\n\n// safeguard against crashing CodeSandbox:\n// stop animation loop after X cycles\nconst maxCycles = 100;\n\nexport default async function renderMindMap(div) {\n  const { scene, renderer, camera } = initializeScene(div, data);\n  data.nodes = await Promise.all(\n    data.nodes.map((node) =>\n      renderToSprite(<MindMapNode label={node.name} level={node.level} />, {\n        width: 120,\n        height: 60\n      }).then((sprite) => ({ ...node, sprite }))\n    )\n  );\n  const graph = new ThreeForceGraph().graphData(data);\n  graph.nodeThreeObject(({ sprite }) => sprite);\n  graph.linkMaterial(\n    ({ level }) => new THREE.MeshBasicMaterial({ color: colorsByLevel[level] })\n  );\n  graph.linkPositionUpdate(updateLinkPosition);\n  graph.numDimensions(2);\n  graph.linkWidth(1);\n  graph.scale.set(0.005, 0.005, 0.005);\n  scene.add(graph);\n  camera.lookAt(graph.position);\n\n  let counter = 0;\n\n  (function animate() {\n    graph.tickFrame();\n    renderer.render(scene, camera);\n    if (++counter === maxCycles) {\n      return;\n    }\n    requestAnimationFrame(animate);\n  })();\n}\n","import React, { createRef, useEffect } from 'react';\nimport renderMindMap from './renderMindMap';\n\nexport default function App() {\n  const divRef = createRef();\n  useEffect(() => renderMindMap(divRef.current), [divRef]);\n  return <div ref={divRef} />;\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}